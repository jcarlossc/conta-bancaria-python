import os
import re
from banco.conta.ContaCorrente import ContaCorrente
from banco.conta.ContaPoupanca import ContaPoupanca
from banco.usuario.PessoaFisica import PessoaFisica
from banco.usuario.PessoaJuridica import PessoaJuridica

class Menu:
    """Classe que representa o menu do sistema
    e centraliza as opera√ß√µes. 

    Atributos:
        None.
    """
    def __init__(self) -> None: 
        pass

    @classmethod    
    def acessar_menu(self):
        """M√©todo para acessar o menu, tamb√©m centraliza 
        todas as opera√ß√µes do sistema.

        Retorna:
            None.
        """
        # M√©todo para limpar tela.
        def limpar_tela():
            os.system('cls' if os.name == 'nt' else 'clear')

        # Fun√ß√£o do menu principal.    
        def menu_principal():
            print("\n----------------------------------üöÄ BANCO PYTHON üöÄ---------------------------------\n")
            print("1 - CADASTRAR USU√ÅRIO")
            print("2 - CRIAR CONTA")
            print("3 - DEPOSITAR")
            print("4 - SACAR")
            print("5 - TRANSFERIR")
            print("6 - EXTRATO")
            print("7 - SAIR")
            print("\n----------------------------------------- FIM -----------------------------------------\n")

        # Fun√ß√£o do menu de cadastro de usu√°rios.
        def menu_cadastro():
            print("\n-------------------------------üöÄ CADASTRO DE USU√ÅRIO üöÄ------------------------------\n")
            print("1 - PESSOA F√çSICA")
            print("2 - PESSOA JUR√çDICA")
            print("3 - SAIR")
            print("\n----------------------------------------- FIM -----------------------------------------\n")   

        # Fun√ß√£o do menu da cria√ß√£o de conta.
        def menu_conta():
            print("\n--------------------------------üöÄ CROA√á√ÉO DE CONTA üöÄ--------------------------------\n")
            print("1 - CONTA CORRENTE")
            print("2 - CONTA POUPAN√áA")
            print("3 - SAIR")
            print("\n----------------------------------------- FIM -----------------------------------------\n")    

        limpar_tela()

        # While principal.
        while True:
            menu_principal()
            operacao = input(f'üîç ESCOLHA UMA OPERA√á√ÇO: ')

            # Condicional cadasto de usu√°rio.
            if operacao == "1":
                limpar_tela()

                # While cadastro do usu√°rio.
                while True:
                    # Fun√ß√£o que valida email.
                    def validar_email(email):
                        padrao = r'^[\w\.-]+@[\w\.-]+\.\w+$'
                        return re.match(padrao, email) is not None
                    
                    menu_cadastro()
                    cadastro_usuario = input(f'üîç ESCOLHA UMA OPERA√á√ÉO: ')

                    # Condicional cadastro de pessoa f√≠sica.
                    if cadastro_usuario == "1":

                        # Entradas para nome, email e cpf de pessoa f√≠sica.
                        nome_pessoa_fisica = input(f'üîç DIGITE SEU NOME: ')
                        email_pessoa_fisica = input(f'üîç DIGITE SEU EMAIL: ')
                        cpf_pessoa_fisica = input(f'üîç DIGITE SEU CPF: ')

                        # Condicional que valida nome, email e cpf de pessoa f√≠sica.
                        if nome_pessoa_fisica.replace(" ", "").isalpha() and validar_email(email_pessoa_fisica) and cpf_pessoa_fisica.isdigit():
                            cpf_pessoa_fisica_int = int(cpf_pessoa_fisica)

                            # Inst√¢ncia de PessoaF√≠sica.
                            pessoa_fisica = PessoaFisica(nome_pessoa_fisica, email_pessoa_fisica, cpf_pessoa_fisica_int)

                            limpar_tela()
                            print(f"‚úÖ {pessoa_fisica.nome.title()} | Pessoa F√≠sica cadastrada com sucesso!")

                        else:
                            limpar_tela()
                            print(f"‚ùå Entrada inv√°lida! Tente novamente") 
                            print(f'‚úÖ NOME: somente caracteres alfab√©ticos.') 
                            print(f'‚úÖ EMAIL: formato: nome@email.com.') 
                            print(f'‚úÖ CPF: somente caracteres num√©ricos.') 

                    # Condicional cadastro de pessoa jur√≠dica.
                    elif cadastro_usuario == "2":
                        
                        # Entradas para nome, email e cpf de pessoa jur√≠dica.
                        nome_pessoa_juridica = input(f'üîç DIGITE SEU NOME: ')
                        email_pessoa_juridica = input(f'üîç DIGITE SEU EMAIL: ')
                        cnpj_pessoa_juridica = input(f'üîç DIGITE SEU CNPJ: ')

                        # Condicional que valida nome, email e cpf de pessoa jur√≠dica.
                        if nome_pessoa_juridica.replace(" ", "").isalpha() and validar_email(email_pessoa_juridica) and cnpj_pessoa_juridica.isdigit():
                            cnpj_pessoa_juridica_int = int(cnpj_pessoa_juridica)

                            # Inst√¢ncia de PessoaF√≠sica.
                            pessoa_juridica = PessoaJuridica(nome_pessoa_juridica, email_pessoa_juridica, cnpj_pessoa_juridica_int)

                            limpar_tela()
                            print(f"‚úÖ {pessoa_juridica.nome.title()} | Pessoa jur√≠dica cadastrada com sucesso!")

                        else:
                            limpar_tela()
                            print(f"‚ùå Entrada inv√°lida! Tente novamente") 
                            print(f'‚úÖ NOME: somente caracteres alfab√©ticos.') 
                            print(f'‚úÖ EMAIL: formato: nome@email.com.') 
                            print(f'‚úÖ CPF: somente caracteres num√©ricos.') 
                            
                    # Condicional para sair do cadastro de usu√°rios.
                    elif cadastro_usuario == "3":
                        break

                    else:
                        limpar_tela()
                        print(f"‚ùå Op√ß√£o inv√°lida!")       

                limpar_tela()        

            elif operacao == "2":
                pass
            elif operacao == "3":
                pass
            elif operacao == "4":
                pass
            elif operacao == "5":
                pass
            elif operacao == "6":
                pass
            elif operacao == "7":
                limpar_tela()
                print("SAIR, AT√â A PR√ìXIMA!")
                exit()
            
            else:
                limpar_tela()
                print("‚ùå Op√ß√£o inv√°lida!")